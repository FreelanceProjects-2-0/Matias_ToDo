@page "/"
@inject NavigationManager NavigationManager
@inject ILogger<Home> Logger
@inject Code.Services.IRoleService _roleService
@inject IServiceProvider _serviceProvider
@inject IHttpContextAccessor httpContextAccessor


<PageTitle>Home</PageTitle>

<AuthorizeView>
    <Authorized>
        <div>
            <b1>ONLY FOR DEBUGGING</b1>
            <h1>Add admin role to user</h1>
            <input placeholder="Enter mail" type="text" @bind-value="@userEmail" />
            @* <input placeholder="" type="text" @bind-value="@input_role" /> *@

            <button @onclick="addAdminToUser" class="w-15  btn btn-md btn-primary my-3">
                Add role to user
            </button>
        </div>
        <br />
        <RegisterCpr />
    </Authorized>
    <NotAuthorized>
        <h1>Authorized not you are</h1>
    </NotAuthorized>
</AuthorizeView>


@code {
    string userEmail = "";
    private string input_role = "Admin";
    protected async Task addAdminToUser()
    {
        Logger.LogInformation($"Email : {userEmail}");
        if (!String.IsNullOrEmpty(userEmail.Trim()))
        {
            Logger.LogInformation($"role : {input_role}");
            if (!String.IsNullOrEmpty(input_role.Trim()))
            {
                var response = await _roleService.CreateUserRole(input_role, _serviceProvider, userEmail);
                Logger.LogInformation($"Succeeded : {response}");
                if (response) StateHasChanged();
            }
        }
    }
}
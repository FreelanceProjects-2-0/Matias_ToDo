@* @page "/todoList" *@
@using Matias_ToDo_DoubleDB.Data.Models.Entities;
@inject Code.Services.IToDoService _todoService
@inject IHttpContextAccessor httpContextAccessor
@inject ILogger<ToDo> Logger

<PageTitle>ToDo</PageTitle>

<AuthorizeView Roles="CPR">
    <Authorized>
        <div>
            <input @bind="newTaskTitle" placeholder="Title here" />
            <input @bind="newTaskDescription" placeholder="Description here" />
            <button @onclick="addTask">Add</button>
        </div>
        @if (taskList != null)
        {
            <div>
                <h2>@taskList.Id</h2>
                <ul>
                    @foreach (ToDoItem task in taskList.Items)
                    {
                        <li>
                            <h3>
                                @task.Title
                            </h3>
                            <h4>
                                @task.Description
                            </h4>
                        </li>
                    } 
                </ul>
            </div>
            }
    </Authorized>
    <NotAuthorized>
        <h3>Farvel</h3>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string newTaskTitle = string.Empty;
    private string newTaskDescription = string.Empty;
    ToDoList taskList;

    protected override async Task OnInitializedAsync()
    {
        taskList = await _todoService.GetTasks(httpContextAccessor?.HttpContext?.User?.Identity?.Name!);
    }

    private void addTask()
    {
            
    }
}

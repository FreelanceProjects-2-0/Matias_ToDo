@using Matias_ToDo_DoubleDB.Code.Services
@using Matias_ToDo_DoubleDB.Data
@inject Code.Services.ICprService _cprService;
@inject IServiceProvider _serviceProvider;
@inject ILogger<RegisterCpr> Logger
@inject IHttpContextAccessor httpContextAccessor
@inject NavigationManager NavManager
@inject IAsymmetricEncryptionService _encryptionService
@inject IHttpContextAccessor httpContextAccessor

<PageTitle>Register CPR</PageTitle>

<AuthorizeView>
    <Authorized>
        @if (!isVerified)
        {

            <div>
                <div>
                    <h1>User: @context.User.Identity?.Name</h1>
                    <h4>Enter CPR-number:</h4>
                    <p>If already having the "CPR" role: Submit button should verify existing user and redirect to "to-do" - If user has entered wrong CPR BE ANGRY</p>
                    <input type="text" @bind-value="@cprNumber" />
                    <button @onclick="registerCpr" class="w-15 btn btn-md btn-primary my-3">
                        Submit
                    </button>
                </div>

                @if (failed)
                {
                    <b1>Wrong CPR entered</b1>
                }
            </div>
        }
        else
        {
            <ToDo />
        }
    </Authorized>
    <NotAuthorized>
        <h1>No permissions for this site</h1>
    </NotAuthorized>
</AuthorizeView>

@code {
    private bool isVerified = false;
    private bool loading = false;
    private string cprNumber = string.Empty;
    private bool failed = false;
    protected async Task registerCpr()
    {
        if (!loading)
        {
            loading = true;
            string userEmail = httpContextAccessor!.HttpContext!.User!.Identity!.Name!;
            var response = await _cprService.AddCprToUser(cprNumber, userEmail);
            Logger.LogInformation($"Response : {response}");
            if (response)
            {
                failed = false;
                isVerified = true;
            }
            else
            {
                failed = true;
                isVerified = false;
            }
            loading = false;
        }
    }
}